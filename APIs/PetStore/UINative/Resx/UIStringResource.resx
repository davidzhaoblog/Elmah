<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  
  <data name="Order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="Orders" xml:space="preserve">
    <value>Orders</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="Id_is_required" xml:space="preserve">
    <value>Id is required</value>
  </data>
  <data name="PetId" xml:space="preserve">
    <value>PetId</value>
  </data>
  <data name="PetId_is_required" xml:space="preserve">
    <value>PetId is required</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="Quantity_is_required" xml:space="preserve">
    <value>Quantity is required</value>
  </data>
  <data name="ShipDate" xml:space="preserve">
    <value>ShipDate</value>
  </data>
  <data name="ShipDate_is_required" xml:space="preserve">
    <value>ShipDate is required</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Status_is_required" xml:space="preserve">
    <value>Status is required</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="Complete_is_required" xml:space="preserve">
    <value>Complete is required</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="Customers" xml:space="preserve">
    <value>Customers</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="Username_is_required" xml:space="preserve">
    <value>Username is required</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Address_is_required" xml:space="preserve">
    <value>Address is required</value>
  </data>
  <data name="Addresses" xml:space="preserve">
    <value>Addresses</value>
  </data>
  <data name="Street" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="Street_is_required" xml:space="preserve">
    <value>Street is required</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="City_is_required" xml:space="preserve">
    <value>City is required</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="State_is_required" xml:space="preserve">
    <value>State is required</value>
  </data>
  <data name="Zip" xml:space="preserve">
    <value>Zip</value>
  </data>
  <data name="Zip_is_required" xml:space="preserve">
    <value>Zip is required</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Name_is_required" xml:space="preserve">
    <value>Name is required</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>FirstName</value>
  </data>
  <data name="FirstName_is_required" xml:space="preserve">
    <value>FirstName is required</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>LastName</value>
  </data>
  <data name="LastName_is_required" xml:space="preserve">
    <value>LastName is required</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Email_is_required" xml:space="preserve">
    <value>Email is required</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Password_is_required" xml:space="preserve">
    <value>Password is required</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Phone_is_required" xml:space="preserve">
    <value>Phone is required</value>
  </data>
  <data name="UserStatus" xml:space="preserve">
    <value>UserStatus</value>
  </data>
  <data name="UserStatus_is_required" xml:space="preserve">
    <value>UserStatus is required</value>
  </data>
  <data name="Tag" xml:space="preserve">
    <value>Tag</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="Pet" xml:space="preserve">
    <value>Pet</value>
  </data>
  <data name="Pets" xml:space="preserve">
    <value>Pets</value>
  </data>
  <data name="Category_is_required" xml:space="preserve">
    <value>Category is required</value>
  </data>
  <data name="PhotoUrls" xml:space="preserve">
    <value>PhotoUrls</value>
  </data>
  <data name="PhotoUrls_is_required" xml:space="preserve">
    <value>PhotoUrls is required</value>
  </data>
  <data name="Tags_is_required" xml:space="preserve">
    <value>Tags is required</value>
  </data>
  <data name="ApiResponse" xml:space="preserve">
    <value>ApiResponse</value>
  </data>
  <data name="ApiResponses" xml:space="preserve">
    <value>ApiResponses</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="Code_is_required" xml:space="preserve">
    <value>Code is required</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Type_is_required" xml:space="preserve">
    <value>Type is required</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="Message_is_required" xml:space="preserve">
    <value>Message is required</value>
  </data>
  <data name="Api_key" xml:space="preserve">
    <value>Api _key</value>
  </data>
  <data name="DeletePet" xml:space="preserve">
    <value>Delete Pet</value>
  </data>
  <data name="OrderId" xml:space="preserve">
    <value>Order Id</value>
  </data>
  <data name="DeleteOrder" xml:space="preserve">
    <value>Delete Order</value>
  </data>
  <data name="DeleteUser" xml:space="preserve">
    <value>Delete User</value>
  </data>
  <data name="FindPetsByStatus" xml:space="preserve">
    <value>Find Pets By Status</value>
  </data>
  <data name="FindPetsByTags" xml:space="preserve">
    <value>Find Pets By Tags</value>
  </data>
  <data name="GetPetById" xml:space="preserve">
    <value>Get Pet By Id</value>
  </data>
  <data name="GetInventory" xml:space="preserve">
    <value>Get Inventory</value>
  </data>
  <data name="GetOrderById" xml:space="preserve">
    <value>Get Order By Id</value>
  </data>
  <data name="LoginUser" xml:space="preserve">
    <value>Login User</value>
  </data>
  <data name="LogoutUser" xml:space="preserve">
    <value>Logout User</value>
  </data>
  <data name="GetUserByName" xml:space="preserve">
    <value>Get User By Name</value>
  </data>
  <data name="AddPet" xml:space="preserve">
    <value>Add Pet</value>
  </data>
  <data name="UpdatePetWithForm" xml:space="preserve">
    <value>Update Pet With Form</value>
  </data>
  <data name="AdditionalMetadata" xml:space="preserve">
    <value>Additional Metadata</value>
  </data>
  <data name="UploadFile" xml:space="preserve">
    <value>Upload File</value>
  </data>
  <data name="PlaceOrder" xml:space="preserve">
    <value>Place Order</value>
  </data>
  <data name="CreateUser" xml:space="preserve">
    <value>Create User</value>
  </data>
  <data name="CreateUsersWithListInput" xml:space="preserve">
    <value>Create Users With List Input</value>
  </data>
  <data name="UpdatePet" xml:space="preserve">
    <value>Update Pet</value>
  </data>
  <data name="UpdateUser" xml:space="preserve">
    <value>Update User</value>
  </data>

</root>

