@using Elmah.Models;
@using Elmah.Resx;
@using Framework.Models;
@model ElmahApplicationCompositeModel;
@inject IUIStrings localizor;
@inject Elmah.MvcWebApp.Models.ViewFeaturesManager _viewFeatureManager;
@{
    ViewData["Title"] = localizor.Get("Dashboard");
    var routeId = Model.__Master__!.Application;
}
<div class="row">
    <div class="col-12 col-md-8 col-lg-9 nopadding">
        <ul class="nav nav-tabs" id="dashboardTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="lists-tab" data-bs-toggle="tab" data-bs-target="#lists" type="button" role="tab" aria-controls="lists" aria-selected="true"><i class="fa fa-list me-2"></i>@localizor.Get("Tab_Lists")</button>
            </li>
        </ul>
        <div class="tab-content" id="dashboardTabContent">
            <div class="tab-pane fade show active" id="lists" role="tabpanel" aria-labelledby="lists-tab">
                <div class="accordion" id="listsPanels">
                    @if (Model!.Responses.ContainsKey(ElmahApplicationCompositeModel.__DataOptions__.ElmahErrors_Via_Application))
                    {
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="panelsStayOpen-heading-elmahErrors_Via_Application">
                                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapse-elmahErrors_Via_Application" aria-expanded="true" aria-controls="panelsStayOpen-elmahErrors_Via_Application">
                                    @localizor.Get("Section_ElmahErrors_Via_Application")
                                </button>
                            </h2>
                            <div id="panelsStayOpen-collapse-elmahErrors_Via_Application" class="accordion-collapse collapse show" aria-labelledby="panelsStayOpen-heading-elmahErrors_Via_Application">
                                <form id="@Model!.UIListSetting.UIListFeatures.SearchFormId" method="post" class="nt-ajax-partial-load-post-formdata"
                                    data-nt-partial-url="@Url.Action("AjaxLoadItems", "ElmahApplication")"
                                    data-nt-updatetarget="#@Model!.UIListSetting.UIListFeatures.ListWrapperId">
                                    <input type="hidden" asp-for="Query.PageIndex" class="nt-page-index" />
                                    <input type="hidden" asp-for="Query.PageSize" class="nt-page-size" />
                                    <input type="hidden" asp-for="Query.OrderBys" class="nt-order-by" />
                                    <input type="hidden" asp-for="Query.PaginationOption" class="nt-pagination-option-field" />
                                    <input type="hidden" asp-for="UIListSetting.UIParams.AdvancedQuery" id="advancedQueryH" class="nt-advanced-query" id="AdvancedQuery" name="AdvancedQuery" />
                                    <input type="hidden" asp-for="UIListSetting.UIParams.PagedViewOption" class="nt-paged-view-option-field" value="@currentView" id="PagedViewOption" name="PagedViewOption" />
                                    <input type="hidden" asp-for="UIListSetting.UIParams.Template" class="nt-template-field" id="Template" name="Template" />
                                </form>
                                <div class="accordion-body p-0">
                                    @await Html.PartialAsync("~/Views/ElmahError/_ListViewsContainer.cshtml",
                                new PagedSearchViewModel<Elmah.Models.ElmahErrorAdvancedQuery, ElmahErrorModel.DefaultView[]>
                                {
                                Query = new ElmahErrorAdvancedQuery { Application = Model.__Master__.Application },
                                UIListSetting = _viewFeatureManager.GetDefaultEditableList(new Framework.Models.UIParams { PagedViewOption = PagedViewOptions.Table, Template = ViewItemTemplateNames.Delete }),
                                Result = new PagedResponse<ElmahErrorModel.DefaultView[]> { ResponseBody = Model.ElmahErrors_Via_Application, Status = Model.Responses[ElmahApplicationCompositeModel.__DataOptions__.ElmahErrors_Via_Application].Status, StatusMessage= Model.Responses[ElmahApplicationCompositeModel.__DataOptions__.ElmahErrors_Via_Application].StatusMessage },
                                // TopLevelDropDownListsFromDatabase =
                                })
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="col-12 col-md-4 col-lg-3">
        <!-- ElmahApplicationCompositeModel.__DataOptions__.__Master__ -->
        <div class="nt-list-wrapper"
             id="master"
             data-nt-loaditem-url="@Url.Action("AjaxLoadItem", "ElmahApplication")"
             data-nt-createitem-url="@Url.Action("AjaxCreate", "ElmahApplication")"
             data-nt-updateitem-url="@Url.Action("AjaxEdit", "ElmahApplication")"
             data-nt-deleteitem-url="@Url.Action("AjaxDelete", "ElmahApplication")">
            <div class="nt-listitem" data-nt-route-id="@routeId">
                @await Html.PartialAsync("~/Views/ElmahApplication/_TileDetailsItem.cshtml",
                new Elmah.MvcWebApp.Models.MvcItemViewModel<Elmah.Models.ElmahApplicationModel>
                {
                Model = Model.__Master__,
                Status = Model!.Responses[ElmahApplicationCompositeModel.__DataOptions__.__Master__].Status,
                Template = Framework.Models.ViewItemTemplateNames.Details.ToString(),
                UIItemFeatures = _viewFeatureManager.GetDefaultReadonlyUIItemFeatures(Framework.Models.CrudViewContainers.Dialog)
                })
                <!-- ElmahApplicationCompositeModel.__DataOptions__.__Master__ -->
            </div>
        </div>
    </div>
</div>
<partial name="~/Views/Shared/_CrudActionDialog.cshtml" />
<partial name="~/Views/Shared/_SimpleActionConfirmationDialog.cshtml" />