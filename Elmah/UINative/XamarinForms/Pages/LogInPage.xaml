<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i18n="clr-namespace:Framework.Xamariner;assembly=Framework.Xamariner"
             xmlns:fx="clr-namespace:Framework.Xamariner;assembly=Framework.Xamariner"
             xmlns:fxc="clr-namespace:Framework.Xamariner.Controls;assembly=Framework.Xamariner"
             mc:Ignorable="d"
             NavigationPage.HasNavigationBar="False"
             NavigationPage.HasBackButton="False"
             x:Class="Elmah.XamarinForms.Pages.LogInPage"
             IsVisible="{Binding IsVisible}"
             Title="{i18n:Translate Text=Account_LogIn_LoginButtonText, ResourceId=Framework.Resx.UIStringResource}"
             BackgroundColor="{DynamicResource Background}" Visual="Material">
    <ContentPage.Content>
        <Grid>
            <StackLayout VerticalOptions="StartAndExpand" Margin="5" IsVisible="{Binding PopupVM.PopupOption, Source={StaticResource Locator}, Converter={StaticResource StringEqualsInverter}, ConverterParameter=RegularPopup}">
                <!--<Label Text="{i18n:Translate Text=Email, ResourceId=Framework.Resx.UIStringResource}" Style="{StaticResource RegularLabelStyle}" />-->
                <Entry x:Name="usernameEntry" AutomationId="UsernameEntryField" Placeholder="{i18n:Translate Text=Email, ResourceId=Framework.Resx.UIStringResource}" Text="{Binding Email}" Style="{StaticResource RegularEntryStyle}" ClearButtonVisibility="WhileEditing" >
                    <Entry.Behaviors>
                        <fx:EntryValidationBehavior PropertyName="Email" />
                    </Entry.Behaviors>
                </Entry>
                <Label Text="{Binding Path=Errors, Converter={StaticResource ValidationErrorConverter}, ConverterParameter=Email}" IsVisible="{Binding Path=Errors, Converter={StaticResource ValidationErrorToIsVisibleConverter}, ConverterParameter=Email}" Style="{StaticResource DataErrorLabelStyle}" />
                <!--<Label Text="{i18n:Translate Text=Password, ResourceId=Framework.Resx.UIStringResource}" Style="{StaticResource RegularLabelStyle}" />-->
                <Entry x:Name="passwordEntry" AutomationId="PasswordEntryField" IsPassword="true" Placeholder="{i18n:Translate Text=Password, ResourceId=Framework.Resx.UIStringResource}" Text="{Binding Password}" Style="{StaticResource RegularEntryStyle}" >
                    <Entry.Behaviors>
                        <fx:EntryValidationBehavior PropertyName="Password" />
                    </Entry.Behaviors>
                </Entry>
                <Label Text="{Binding Path=Errors, Converter={StaticResource ValidationErrorConverter}, ConverterParameter=Password}" IsVisible="{Binding Path=Errors, Converter={StaticResource ValidationErrorToIsVisibleConverter}, ConverterParameter=Password}" Style="{StaticResource DataErrorLabelStyle}" />
                <Button AutomationId="LogInButton" Text="{i18n:Translate Text=Account_LogIn_LoginButtonText, ResourceId=Framework.Resx.UIStringResource}" Command="{Binding LogInCommand}" IsEnabled="{Binding EnableLogInButton}" />
                <Label x:Name="messageLabel" Text="{Binding ErrorMessage}" Style="{StaticResource DataErrorLabelStyle}" IsVisible="{Binding ErrorMessage, Converter={StaticResource StringNullOrEmptyBoolConverter}}" Margin="30" />
                <Button AutomationId="RegisterButton" Text="{i18n:Translate Text=Account_LogIn_Registerasanewuser, ResourceId=Framework.Resx.UIStringResource}" Clicked="OnSignUpButtonClicked" />
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Grid.Row="0" HorizontalOptions="Center" Text="{i18n:Translate Text=Account_LogIn_RememberMeText, ResourceId=Framework.Resx.UIStringResource}" Style="{StaticResource RegularLabelStyle}" />
                    <Switch AutomationId="RememberMeEntryField" Grid.Column="1" Grid.Row="0" HorizontalOptions="Center" x:Name="RememberMeEntry" IsToggled="{Binding RememberMe}" />
                    <Label Grid.Column="0" Grid.Row="1" HorizontalOptions="Center" Text="{i18n:Translate Text=AutoSignIn, ResourceId=Framework.Resx.UIStringResource}" Style="{StaticResource RegularLabelStyle}" />
                    <Switch AutomationId="AutoSignInEntryField" Grid.Column="1" Grid.Row="1" HorizontalOptions="Center" x:Name="AutoSignInEntry" IsToggled="{Binding AutoSignIn}" IsEnabled="{Binding RememberMe}" />
                </Grid>
                <Frame CornerRadius="3" BackgroundColor="#4167b2" HeightRequest="60" Margin="20" Padding="0" HasShadow="false">
                    <StackLayout Orientation="Horizontal" Padding="5">
                        <!--<Image HeightRequest="80" Aspect="AspectFill" Source="http://3daystartup.org/wp-content/uploads/2011/07/facebook-logo-png-white-facebook-logo-png-white-facebook-icon-png-32.png" />-->
                        <Label Text="Continue with Facebook" VerticalOptions="CenterAndExpand" FontSize="20" FontAttributes="Bold" />
                        <StackLayout.GestureRecognizers>
                            <TapGestureRecognizer x:Name="FacebookButton" AutomationId="FacebookButton" Command="{Binding GoogleLogInCommand}" />
                        </StackLayout.GestureRecognizers>
                    </StackLayout>
                </Frame>
            </StackLayout>
            <fxc:PopupMessage IsVisible="{Binding PopupVM.PopupOption, Source={StaticResource Locator}, Converter={StaticResource StringEqualsConverter}, ConverterParameter=RegularPopup}" />
        </Grid>
    </ContentPage.Content>
</ContentPage>
