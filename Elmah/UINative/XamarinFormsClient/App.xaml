<?xml version="1.0" encoding="utf-8"?>
<Application
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:ff="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
    xmlns:i18n="clr-namespace:Framework.Xamariner;assembly=Framework.Xamariner"
    xmlns:fe="clr-namespace:Framework;assembly=Framework"
    xmlns:fx="clr-namespace:Framework.Xamariner;assembly=Framework.Xamariner"
    xmlns:fxam="clr-namespace:Framework.Xaml;assembly=Framework.Xaml"
    xmlns:fxc="clr-namespace:Framework.Xamariner.Controls;assembly=Framework.Xamariner"
    xmlns:fxca="clr-namespace:Framework.Xamariner.Controls.ActionForm;assembly=Framework.Xamariner"
    xmlns:fxcv="clr-namespace:Framework.Xamariner.Converters;assembly=Framework.Xamariner"
    xmlns:vm="clr-namespace:Elmah.MVVMLightViewModels;assembly=Elmah.MVVMLightViewModels"
    xmlns:vmClient="clr-namespace:Elmah.XamarinForms.ViewModels"
    xmlns:petstorevm="clr-namespace:Elmah.PetStore.ViewModels;assembly=Elmah.PetStore.ViewModels"
    x:Class="Elmah.XamarinForms.App">
    <Application.Resources>
        <ResourceDictionary Source="Themes/LightTheme.xaml" />
        <!-- #region 1. ViewModelLocator and Converters -->
        <vm:ViewModelLocator x:Key="Locator" />
        <petstorevm:ViewModelLocator x:Key="PetStoreLocator" />
        <!-- #region 1.1. Swagger ViewModelLocators -->
        <vmClient:ViewModelLocator x:Key="LocatorClient" />
        <!-- #region 1.2. Converters -->
        <fxcv:AgeConverter x:Key="AgeConverter" />
        <fxcv:BooleanInverter x:Key="BooleanInverter" />
        <fxcv:EnumToNameValuePairConverter x:Key="EnumToNameValuePairConverter" />
        <fxcv:ListItemViewModeToSelectionModeConverter x:Key="ListItemViewModeToSelectionModeConverter" />
        <fxcv:StringEqualsConverter x:Key="StringEqualsConverter" />
        <fxcv:StringEqualsInverter x:Key="StringEqualsInverter" />
        <fxcv:StringNullOrEmptyBoolConverter x:Key="StringNullOrEmptyBoolConverter" />
        <fxcv:StringToFontIconSettingsConverter x:Key="StringToFontIconSettingsConverter" />
        <fxcv:ToggleStatusToIconFontConverter x:Key="ToggleStatusToIconFontConverter" />
        <fxcv:UriToImageSourceConverter x:Key="UriToImageSourceConverter" />
        <fxcv:ValidationErrorConverter x:Key="ValidationErrorConverter" />
        <fxcv:ValidationErrorToIsVisibleConverter x:Key="ValidationErrorToIsVisibleConverter" />
        <fxcv:VerticalActionSheetHeightConverter x:Key="VerticalActionSheetHeightConverter" />
        <fxcv:StringNullOrEmptyBoolConverter x:Key="StringNullOrEmptyBoolInverter" Invert="True" />
        <!-- #endregion 1. ViewModelLocator and Converters -->
        <!-- #region 2. Font Awesome 5 -->
        <OnPlatform x:TypeArguments="x:String" x:Key="FontAwesomeBrands">
            <On Platform="Android" Value="Font Awesome 5 Brands-Regular-400.otf#Font Awesome 5 Brands-Regular" />
            <On Platform="iOS" Value="Font Awesome 5 Brands-Regular" />
            <On Platform="UWP" Value="/Assets/Font Awesome 5 Brands-Regular-400.otf#Font Awesome 5 Brands-Regular" />
        </OnPlatform>
        <OnPlatform x:TypeArguments="x:String" x:Key="FontAwesomeSolid">
            <On Platform="Android" Value="Font Awesome 5 Free-Solid-900.otf#Font Awesome 5 Free-Solid" />
            <On Platform="iOS" Value="Font Awesome 5 Free-Solid" />
            <On Platform="UWP" Value="/Assets/Font Awesome 5 Free-Solid-900.otf#Font Awesome 5 Free-Solid" />
        </OnPlatform>
        <OnPlatform x:TypeArguments="x:String" x:Key="FontAwesomeRegular">
            <On Platform="Android" Value="Font Awesome 5 Free-Regular-400.otf#Font Awesome 5 Free-Regular" />
            <On Platform="iOS" Value="Font Awesome 5 Free-Regular" />
            <On Platform="UWP" Value="/Assets/Font Awesome 5 Free-Regular-400.otf#Font Awesome 5 Free-Regular" />
        </OnPlatform>
        <!-- #endregion 2. Font Awesome 5 -->
        <!-- 3. Styles-->
        <!--#region 3.1. default control base styles-->
        <Style TargetType="Grid">
            <Setter Property="RowSpacing" Value="0" />
            <Setter Property="ColumnSpacing" Value="0" />
            <Setter Property="Padding" Value="0" />
        </Style>
        <Style TargetType="StackLayout">
            <Setter Property="Spacing" Value="0" />
            <Setter Property="Orientation" Value="Vertical" />
            <Setter Property="Padding" Value="0" />
        </Style>
        <Style TargetType="ListView">
            <Setter Property="SeparatorVisibility" Value="None" />
        </Style>
        <Style TargetType="Frame">
            <Setter Property="Padding" Value="0" />
            <Setter Property="CornerRadius" Value="5" />
        </Style>
        <Style TargetType="Label">
            <Setter Property="HorizontalOptions" Value="Start" />
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="TextColor" Value="{DynamicResource OnBackground}" />
        </Style>
        <Style TargetType="Span">
            <Setter Property="TextColor" Value="{DynamicResource OnBackground}" />
        </Style>
        <Style TargetType="Image">
            <Setter Property="HorizontalOptions" Value="Center" />
            <Setter Property="VerticalOptions" Value="Center" />
        </Style>
        <Style TargetType="ff:CachedImage">
            <Setter Property="HorizontalOptions" Value="Center" />
            <Setter Property="VerticalOptions" Value="Center" />
        </Style>
        <Style TargetType="fxc:EntryExt">
            <Setter Property="FontSize" Value="Small" />
            <Setter Property="TextColor" Value="{DynamicResource OnSurface}" />
            <!--<Setter Property="BackgroundColor" Value="{DynamicResource ThirdColor}" />-->
            <Setter Property="PlaceholderColor" Value="{DynamicResource OnSurface}" />
        </Style>
        <Style TargetType="Editor">
            <Setter Property="FontSize" Value="Small" />
            <Setter Property="TextColor" Value="{DynamicResource OnSurface}" />
            <!--<Setter Property="BackgroundColor" Value="{DynamicResource ThirdColor}" />-->
            <Setter Property="PlaceholderColor" Value="{DynamicResource OnSurface}" />
        </Style>
        <Style TargetType="Entry">
            <Setter Property="FontSize" Value="Small" />
            <Setter Property="TextColor" Value="{DynamicResource OnSurface}" />
            <!--<Setter Property="BackgroundColor" Value="{DynamicResource ThirdColor}" />-->
            <Setter Property="PlaceholderColor" Value="{DynamicResource OnSurface}" />
        </Style>
        <Style TargetType="DatePicker">
            <Setter Property="FontSize" Value="Small" />
            <Setter Property="TextColor" Value="{DynamicResource OnSurface}" />
            <!--<Setter Property="BackgroundColor" Value="{DynamicResource ThirdColor}" />-->
        </Style>
        <Style TargetType="Picker">
            <Setter Property="FontSize" Value="Small" />
            <Setter Property="TextColor" Value="{DynamicResource OnSurface}" />
            <!--<Setter Property="BackgroundColor" Value="{DynamicResource ThirdColor}" />-->
            <Setter Property="TitleColor" Value="{DynamicResource OnSurface}" />
        </Style>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="5" />
            <Setter Property="TextColor" Value="{DynamicResource OnSecondary}" />
            <Setter Property="BackgroundColor" Value="{DynamicResource Secondary}" />
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            <!--<Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" >
                            <VisualState.Setters>
                                <Setter Property="TextColor" Value="{DynamicResource OnPrimary}" />
                                <Setter Property="BackgroundColor" Value="{DynamicResource FifthColor}" />
                                <Setter Property="BorderWidth" Value="1" />
                                <Setter Property="BorderColor" Value="{DynamicResource SixthColor}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <VisualState.Setters>
                                <Setter Property="TextColor" Value="{DynamicResource OnPrimary}" />
                                <Setter Property="BackgroundColor" Value="{DynamicResource ThirdColor}" />
                                <Setter Property="BorderWidth" Value="1" />
                                <Setter Property="BorderColor" Value="{DynamicResource FourthColor}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Focused">
                                <VisualState.Setters>
                                    <Setter Property="BorderWidth" Value="4" />
                                    <Setter Property="BorderColor" Value="SlateGray" />
                                </VisualState.Setters>
                            </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>-->
        </Style>
        <Style TargetType="ImageButton">
            <Setter Property="BackgroundColor" Value="{DynamicResource Secondary}" />
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            <!--<Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" >
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{DynamicResource FifthColor}" />
                                <Setter Property="BorderWidth" Value="1" />
                                <Setter Property="BorderColor" Value="{DynamicResource SixthColor}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{DynamicResource ThirdColor}" />
                                <Setter Property="BorderWidth" Value="1" />
                                <Setter Property="BorderColor" Value="{DynamicResource FourthColor}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Focused">
                                <VisualState.Setters>
                                    <Setter Property="BorderWidth" Value="4" />
                                    <Setter Property="BorderColor" Value="SlateGray" />
                                </VisualState.Setters>
                            </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>-->
        </Style>
        <Style TargetType="fxc:ToggleButton">
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup Name="ToggleStates">
                        <VisualState Name="ToggledOff">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{DynamicResource Primary}" />
                                <Setter Property="TextColor" Value="{DynamicResource OnPrimary}" />
                                <Setter Property="BorderColor" Value="{DynamicResource Primary}" />
                                <Setter Property="BorderWidth" Value="0" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState Name="ToggledOn">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{DynamicResource Background}" />
                                <Setter Property="TextColor" Value="{DynamicResource OnBackground}" />
                                <Setter Property="BorderColor" Value="{DynamicResource OnBackground}" />
                                <Setter Property="BorderWidth" Value="2" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>
        <!--<Style TargetType="Label" x:Key="LabelToggleOff">
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="HorizontalOptions" Value="Center" />
            <Setter Property="BackgroundColor" Value="{DynamicResource Primary}" />
            <Setter Property="TextColor" Value="{DynamicResource OnPrimary}" />
            --><!--<Setter Property="BorderColor" Value="{DynamicResource Primary}" />-->
            <!--<Setter Property="BorderWidth" Value="0" />--><!--
        </Style>
        <Style TargetType="Label" x:Key="LabelToggleOn">
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="HorizontalOptions" Value="Center" />
            <Setter Property="BackgroundColor" Value="{DynamicResource Background}" />
            <Setter Property="TextColor" Value="{DynamicResource OnBackground}" />
            --><!--<Setter Property="BorderColor" Value="{DynamicResource OnBackground}" />-->
            <!--<Setter Property="BorderWidth" Value="2" />--><!--
        </Style>-->
        <!--#endregion 3.1. default control base styles-->
        <!-- #region 3.2. AppShell -->
        <Style x:Key="ShellStyle"
               TargetType="Element">
            <Setter Property="Shell.BackgroundColor"
                    Value="{DynamicResource SecondaryVariant}" />
            <Setter Property="Shell.ForegroundColor"
                    Value="{DynamicResource OnSecondary}" />
            <Setter Property="Shell.TitleColor"
                    Value="{DynamicResource OnSecondary}" />
            <Setter Property="Shell.DisabledColor"
                    Value="{DynamicResource OnSecondary}" />
            <Setter Property="Shell.UnselectedColor"
                    Value="{DynamicResource OnSecondary}" />
        </Style>
        <Style TargetType="ShellItem"
               BasedOn="{StaticResource ShellStyle}" />
        <!-- #endregion 3.2. AppShell -->
        <!-- #region 2.2. WizardIndicator -->
        <Style x:Key="WizardIndicatorConnectorBoxView" TargetType="BoxView">
            <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="Color" Value="{DynamicResource SecondaryVariant}" />
            <Setter Property="HeightRequest" Value="2" />
            <Setter Property="Opacity" Value="0.5" />
        </Style>
        <Style x:Key="WizardIndicatorItem" TargetType="Label">
            <Setter Property="HorizontalOptions" Value="Center" />
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="TextColor" Value="{DynamicResource PrimaryVariant}" />
            <!--<Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />-->
        </Style>
        <Style x:Key="WizardIndicatorItem1" TargetType="Label">
            <Setter Property="HorizontalOptions" Value="Center" />
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="TextColor" Value="{DynamicResource PrimaryVariant}" />
            <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
        </Style>
        <Style x:Key="WizardIndicatorNumber" TargetType="Label">
            <Setter Property="HorizontalOptions" Value="Center" />
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="TextColor" Value="{DynamicResource OnPrimary}" />
        </Style>
        <!-- #endregion 2.. WizardIndicator -->
        <Style x:Key="HSeparator" TargetType="Grid">
            <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            <Setter Property="BackgroundColor" Value="{DynamicResource Surface}" />
            <Setter Property="HeightRequest" Value="1" />
            <Setter Property="Margin" Value="0,0,0,0" />
        </Style>
        <Style x:Key="HSeparator1" TargetType="Grid">
            <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            <Setter Property="BackgroundColor" Value="{DynamicResource Surface}" />
            <Setter Property="HeightRequest" Value="3" />
            <Setter Property="Margin" Value="10,0,10,0" />
        </Style>
        <Style x:Key="Heading" TargetType="Label">
            <Setter Property="FontSize" Value="Title" />
            <!--<Setter Property="TextColor" Value="DarkTurquoise" />
            <Setter Property="BackgroundColor" Value="Yellow"/>-->
            <Setter Property="Margin" Value="30,10,30,10" />
            <Setter Property="HorizontalTextAlignment" Value="Center"/>
        </Style>
        <Style x:Key="SubHeading" TargetType="Label">
            <Setter Property="FontSize" Value="Subtitle" />
            <!--<Setter Property="TextColor" Value="DarkTurquoise" />
            <Setter Property="BackgroundColor" Value="Yellow"/>-->
            <Setter Property="Margin" Value="30,10,30,10" />
            <Setter Property="HorizontalTextAlignment" Value="Center"/>
        </Style>
        <Style x:Key="WizardHeading" TargetType="Label">
            <Setter Property="FontSize" Value="Title" />
            <!--<Setter Property="TextColor" Value="DarkTurquoise" />
            <Setter Property="BackgroundColor" Value="Yellow"/>-->
            <Setter Property="Margin" Value="30,10,30,10" />
            <Setter Property="HorizontalTextAlignment" Value="Center"/>
        </Style>
        <Style x:Key="RegularLabelStyle" TargetType="Label">
            <Setter Property="FontSize" Value="Small" />
            <Setter Property="FontAttributes" Value="Bold" />
            <!--<Setter Property="TextColor" Value="Black" />
            <Setter Property="BackgroundColor" Value="Azure" />-->
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="HorizontalOptions" Value="StartAndExpand" />
            <Setter Property="Margin" Value="0,10,0,5" />
        </Style>
        <Style x:Key="Description" TargetType="Label">
            <Setter Property="FontSize" Value="Small" />
            <!--<Setter Property="TextColor" Value="Black" />
            <Setter Property="BackgroundColor" Value="Azure" />-->
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="HorizontalOptions" Value="StartAndExpand" />
            <Setter Property="Margin" Value="0,10,0,5" />
        </Style>
        <Style x:Key="DataLabelStyle" TargetType="Label">
            <Setter Property="FontSize" Value="Medium" />
            <!--<Setter Property="BackgroundColor" Value="{DynamicResource ThirdColor}" />-->
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="HorizontalOptions" Value="StartAndExpand" />
            <Setter Property="Margin" Value="0,0,0,5" />
        </Style>
        <Style x:Key="DataErrorLabelStyle" TargetType="Label">
            <Setter Property="FontSize" Value="Small" />
            <Setter Property="FontAttributes" Value="Bold" />
            <Setter Property="BackgroundColor" Value="Red" />
            <Setter Property="VerticalOptions" Value="Start" />
            <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            <Setter Property="Margin" Value="0,-12,0,10" />
        </Style>
        <Style x:Key="RegularEntryStyle" TargetType="Entry">
            <Setter Property="FontSize" Value="Medium" />
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            <Setter Property="Margin" Value="0,0,0,5" />
        </Style>
        <Style x:Key="RegularEntryExtStyle" TargetType="fxc:EntryExt">
            <Setter Property="FontSize" Value="Medium" />
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            <Setter Property="BorderWidth" Value="2" />
            <!--<Setter Property="BorderColor" Value="{DynamicResource SecondaryColor}" />-->
            <Setter Property="CornerRadius" Value="15" />
            <Setter Property="Margin" Value="0,0,0,5" />
        </Style>
        <Style x:Key="FormViewPickerStyle" TargetType="Picker">
            <Setter Property="FontSize" Value="Medium" />
            <!--<Setter Property="TextColor" Value="Black" />-->
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            <Setter Property="Margin" Value="0,0,0,5" />
        </Style>
        <Style x:Key="ListViewPickerStyle" TargetType="Picker">
            <Setter Property="FontSize" Value="Medium" />
            <!--<Setter Property="TextColor" Value="Black" />-->
            <!--<Setter Property="PlaceholderColor" Value="Black" />-->
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="HorizontalOptions" Value="FillAndExpand" />
        </Style>
        <Style x:Key="LaunchButton" TargetType="Button">
            <Setter Property="FontSize" Value="Medium" />
        </Style>
        <Style TargetType="Grid" x:Key="GridToggleIsEnabled">
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup>
                        <VisualState x:Name="Checked">
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding IsContentEnable}" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Property="IsEnabled"
                                        Value="True" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Unchecked">
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding IsContentEnable, Converter={StaticResource BooleanInverter}}" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Property="IsEnabled"
                                        Value="False" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>
        <!-- #region 1. Global -->
        <Style TargetType="fxca:CloseButtonNavBack" x:Key="CloseButtonNavBack">
            <Setter Property="HorizontalOptions" Value="Center" />
            <Setter Property="VerticalOptions" Value="End" />
        </Style>
        <Style TargetType="fxca:DoneSelection" x:Key="DoneSelection">
            <Setter Property="HorizontalOptions" Value="Center" />
            <Setter Property="VerticalOptions" Value="End" />
        </Style>
        <Style TargetType="fxca:ClearSelection" x:Key="ClearSelection">
            <Setter Property="HorizontalOptions" Value="Start" />
            <Setter Property="VerticalOptions" Value="End" />
        </Style>
        <Style TargetType="fxca:FooterActionSheet" x:Key="FooterActionSheet">
            <Setter Property="HorizontalOptions" Value="End" />
            <Setter Property="VerticalOptions" Value="End" />
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="Margin" Value="0,20,10,20" />
        </Style>
        <Style TargetType="fxca:CloseButtonCloseItemControlPopup" x:Key="CloseButtonCloseItemControlPopup">
            <Setter Property="HorizontalOptions" Value="Center" />
            <Setter Property="VerticalOptions" Value="End" />
        </Style>
        <Style TargetType="Grid" x:Key="PopupMessageWrapper">
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            <Setter Property="VerticalOptions" Value="FillAndExpand" />
        </Style>
        <Style TargetType="Grid" x:Key="PopupVerticalActionSheetWrapper">
            <Setter Property="BackgroundColor" Value="{DynamicResource Background}" />
            <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            <Setter Property="VerticalOptions" Value="FillAndExpand" />
        </Style>
        <!-- #endregion 1. Global -->
        <!-- #region 2.1.1. List Page: Pages\Index.xaml or Pages\CommonResultView.xaml -->
        <Style TargetType="Grid" x:Key="PopupItemCtrlWrapper">
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            <Setter Property="VerticalOptions" Value="FillAndExpand" />
        </Style>
        <Style TargetType="Frame" x:Key="PopupItemCtrlBorder">
            <Setter Property="BorderColor" Value="{DynamicResource OnSurface}" />
            <Setter Property="Margin" Value="10,10,10,0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="BackgroundColor" Value="{DynamicResource Surface}" />
        </Style>
        <Style TargetType="Frame" x:Key="RightSidePopupWrapper">
            <Setter Property="BorderColor" Value="{DynamicResource Surface}" />
            <Setter Property="CornerRadius" Value="10" />
        </Style>
        <Style TargetType="Grid" x:Key="RightSidePopupContent">
            <Setter Property="BackgroundColor" Value="{DynamicResource Background}" />
            <Setter Property="Padding" Value="20,0,0,0" />
        </Style>
        <Style TargetType="fxca:HeaderActionSheet" x:Key="RightSidePopupHeaderActionSheet">
            <Setter Property="HorizontalOptions" Value="FillAndExpand" />
        </Style>
        <Style TargetType="ContentView" x:Key="RightSidePopupCommonSearchView">
            <Setter Property="VerticalOptions" Value="Start" />
        </Style>
        <!-- #endregion 2.1.1. List Page: Pages\Index.xaml or Pages\CommonResultView.xaml -->
        <!-- #region 2.1.2. List Control: Controls\Index.xaml or Controls\CommonResultView.xaml -->
        <Binding x:Key="NonGroupedCollection" Path="Result"/>
        <Binding x:Key="GroupedCollection" Path="GroupedResults"/>
        <Style x:Key="CollectionViewStyle" TargetType="CollectionView">
            <Style.Triggers>
                <DataTrigger TargetType="CollectionView"
                     Binding="{Binding Source={RelativeSource Self}, Path=IsGrouped}"
                     Value="True">
                    <Setter Property="ItemsSource" Value="{StaticResource GroupedCollection}" />
                </DataTrigger>
                <DataTrigger TargetType="CollectionView"
                     Binding="{Binding Source={RelativeSource Self}, Path=IsGrouped}"
                     Value="False">
                    <Setter Property="ItemsSource" Value="{StaticResource NonGroupedCollection}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="StackLayout" x:Key="ListWrapper">
            <Setter Property="Orientation" Value="Vertical" />
            <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            <Setter Property="VerticalOptions" Value="FillAndExpand" />
        </Style>
        <Style TargetType="Grid" x:Key="ListHeader">
            <Setter Property="BackgroundColor" Value="{DynamicResource Secondary}" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="HeightRequest" Value="50" />
            <Setter Property="MinimumHeightRequest" Value="50" />
        </Style>
        <Style TargetType="Frame" x:Key="ListHeaderCountLabelWrapper">
            <Setter Property="CornerRadius" Value="25" />
            <Setter Property="HorizontalOptions" Value="Center" />
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="BackgroundColor" Value="{DynamicResource Surface}" />
            <Setter Property="WidthRequest" Value="50" />
            <Setter Property="HeightRequest" Value="50" />
            <Setter Property="MinimumHeightRequest" Value="50" />
        </Style>
        <Style TargetType="Label" x:Key="ListHeaderCountLabel">
            <Setter Property="Margin" Value="0" />
            <Setter Property="HorizontalOptions" Value="Center" />
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="VerticalTextAlignment" Value="Center" />
            <Setter Property="HeightRequest" Value="50" />
            <Setter Property="MinimumHeightRequest" Value="50" />
            <Setter Property="MinimumWidthRequest" Value="50" />
        </Style>
        <Style TargetType="SearchBar" x:Key="ListHeaderSearchBar">
            <Setter Property="HeightRequest" Value="50" />
            <Setter Property="MinimumHeightRequest" Value="50" />
            <Setter Property="HorizontalOptions" Value="Start" />
        </Style>
        <Style x:Key="CollectionViewItemFrame" TargetType="fxc:FrameExt">
            <Setter Property="CornerRadius" Value="1" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" >
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{DynamicResource Surface}" />
                                <Setter Property="BorderColor" Value="{DynamicResource Background}" />
                                <Setter Property="IsSelected" Value="False" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{DynamicResource Secondary}" />
                                <Setter Property="BorderColor" Value="{DynamicResource Background}" />
                                <Setter Property="IsSelected" Value="True" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>
        <Style x:Key="CollectionViewItemBase" TargetType="fxc:ListItemViewBase">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" >
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{DynamicResource Surface}" />
                                <Setter Property="IsSelected" Value="False" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{DynamicResource Secondary}" />
                                <Setter Property="IsSelected" Value="True" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>
        <Style TargetType="fxc:FontIcon" x:Key="ListItemFontIcon">
            <Setter Property="Margin" Value="10,0,10,0" />
            <Setter Property="HorizontalOptions" Value="Center" />
            <Setter Property="VerticalOptions" Value="Center" />
        </Style>
        <DataTemplate x:Key="CollectionViewGroupHeaderTemplate">
            <Grid HeightRequest="50" BackgroundColor="{DynamicResource SecondaryVariant}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="50"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Text="{Binding GroupName}" VerticalOptions="Center" VerticalTextAlignment="Center" HorizontalOptions="Center" HorizontalTextAlignment="Center"
                                            FontSize="Medium"
                                            FontAttributes="Bold" />
                <Frame Grid.Column="1" CornerRadius="20" BackgroundColor="{DynamicResource Surface}" VerticalOptions="Center" HorizontalOptions="Center" HeightRequest="40" WidthRequest="40" >
                    <Label Text="{Binding Count, StringFormat='{0:D}'}" Margin="0" VerticalOptions="Center" VerticalTextAlignment="Center" HorizontalOptions="Center" HorizontalTextAlignment="Center"/>
                </Frame>
            </Grid>
        </DataTemplate>
        <!-- #endregion 2.1.2. List Control: Controls\Index.xaml or Controls\CommonResultView.xaml -->
        <!-- #region 2.2.2. Search Control: Controls\CommonSearchView.xaml -->
        <Style TargetType="StackLayout" x:Key="SearchCtrlWrapper">
            <Setter Property="HorizontalOptions" Value="CenterAndExpand" />
            <Setter Property="VerticalOptions" Value="CenterAndExpand" />
        </Style>
        <!-- #endregion 2.1.1. List Page: Pages\Index.xaml or Pages\CommonResultView.xaml -->
    </Application.Resources>
</Application>
